<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:i="clr-namespace:EleCho.WpfSuite.Internal"
                    xmlns:local="clr-namespace:EleCho.WpfSuite.Controls">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <local:ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type local:ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleButton}">
                    <Border x:Name="templateRoot"
                            Background="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=Background}"
                            BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                HorizontalAlignment="Right"
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Fill="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=GlyphBrush}"
                                  HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableBackground}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableBorderBrush}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonBackground}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonBorderBrush}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="HoverGlyphBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="GlyphBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="HoverBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="HoverBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableHoverBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="HoverBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableHoverBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="HoverBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="splitBorder">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonHoverBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonBackground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="splitBorder" >
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonHoverBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonBorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="PressedGlyphBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="GlyphBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="PressedBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="PressedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditablePressedBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="PressedBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditablePressedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="PressedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="splitBorder">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonPressedBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonBackground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="splitBorder" >
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonPressedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonBorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" >
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="DisabledGlyphBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="GlyphBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="DisabledBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="DisabledBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableDisabledBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="DisabledBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="templateRoot">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableDisabledBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="DisabledBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="splitBorder">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonDisabledBackground"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonBackground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="splitBorder" >
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonDisabledBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:ComboBox}" Path="EditableButtonBorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type local:ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <local:Popup x:Name="PART_Popup"
                         AllowsTransparency="true"
                         Grid.ColumnSpan="2"
                         IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Placement="Bottom"
                         PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <i:SystemDropShadowChrome x:Name="shadow"
                                          Color="Transparent"
                                          CornerRadius="{TemplateBinding PopupCornerRadius}"
                                          MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <local:ContentControl Transition="{TemplateBinding PopupContentTransition}"
                                          TransitionMode="{TemplateBinding PopupContentTransitionMode}">
                        <local:Border x:Name="dropDownBorder"
                                      Background="{TemplateBinding PopupBackground}"
                                      BorderThickness="{TemplateBinding PopupBorderThickness}"
                                      BorderBrush="{TemplateBinding PopupBorderBrush}"
                                      CornerRadius="{TemplateBinding PopupCornerRadius}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Border x:Name="opaqueRect"
                                                Background="{Binding Background, ElementName=dropDownBorder}"
                                                Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                CornerRadius="{TemplateBinding PopupCornerRadius}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </local:Border>
                    </local:ContentControl>
                </i:SystemDropShadowChrome>
            </local:Popup>
            <local:ToggleButton x:Name="toggleButton"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                ClipToBounds="{TemplateBinding ClipToBounds}"
                                Grid.ColumnSpan="2"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Style="{StaticResource ComboBoxToggleButton}"/>
            <local:Border x:Name="border"
                          Background="{TemplateBinding TextBoxBackground}"
                          CornerRadius="{TemplateBinding CornerRadius}"
                          Margin="{TemplateBinding BorderThickness}">
                <local:TextBox x:Name="PART_EditableTextBox"
                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                               IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               Margin="{TemplateBinding Padding}"
                               Style="{StaticResource ComboBoxEditableTextBox}"
                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </local:Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ClipToBounds" Value="True">
                <Setter TargetName="PART_EditableTextBox"
                        Property="Clip"
                        Value="{Binding ElementName=border,Path=ContentClip}"/>
                <Setter TargetName="DropDownScrollViewer"
                        Property="Clip"
                        Value="{Binding ElementName=dropDownBorder,Path=ContentClip}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_EditableTextBox" Property="Foreground" >
                    <Setter.Value>
                        <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HoverForeground"/>
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger SourceName="toggleButton" Property="IsPressed" Value="True">
                <Setter TargetName="PART_EditableTextBox" Property="Foreground" >
                    <Setter.Value>
                        <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="PressedForeground"/>
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_EditableTextBox" Property="Foreground" >
                    <Setter.Value>
                        <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledForeground"/>
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type local:ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <local:Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <i:SystemDropShadowChrome x:Name="shadow"
                                          Color="Transparent"
                                          CornerRadius="{TemplateBinding PopupCornerRadius}"
                                          MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <local:ContentControl Transition="{TemplateBinding PopupContentTransition}"
                                          TransitionMode="{TemplateBinding PopupContentTransitionMode}">
                        <local:Border x:Name="dropDownBorder"
                                      Background="{TemplateBinding PopupBackground}"
                                      BorderThickness="{TemplateBinding PopupBorderThickness}"
                                      BorderBrush="{TemplateBinding PopupBorderBrush}"
                                      CornerRadius="{TemplateBinding PopupCornerRadius}">
                            <local:ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Border x:Name="opaqueRect"
                                                Background="{Binding Background, ElementName=dropDownBorder}"
                                                Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                CornerRadius="{TemplateBinding PopupCornerRadius}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </local:ScrollViewer>
                        </local:Border>
                    </local:ContentControl>
                </i:SystemDropShadowChrome>
            </local:Popup>
            <local:ToggleButton x:Name="toggleButton"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                ClipToBounds="{TemplateBinding ClipToBounds}"
                                Grid.ColumnSpan="2"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Style="{StaticResource ComboBoxToggleButton}">
            </local:ToggleButton>
            <local:Border x:Name="PART_Border"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="{TemplateBinding CornerRadius}">
                <ContentPresenter x:Name="contentPresenter"
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  IsHitTestVisible="false"
                                  Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </local:Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ClipToBounds" Value="True">
                <Setter TargetName="contentPresenter"
                        Property="Clip"
                        Value="{Binding ElementName=PART_Border,Path=ContentClip}"/>
                <Setter TargetName="DropDownScrollViewer"
                        Property="Clip"
                        Value="{Binding ElementName=dropDownBorder,Path=ContentClip}"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" >
                    <Setter.Value>
                        <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HoverForeground"/>
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger SourceName="toggleButton" Property="IsPressed" Value="True">
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" >
                    <Setter.Value>
                        <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="PressedForeground"/>
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" >
                    <Setter.Value>
                        <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledForeground"/>
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type local:ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
        <Setter Property="PopupBorderThickness" Value="1"/>

        <!--NormalState-->
        <Setter Property="TextBoxBackground" Value="#FFFFFFFF"/>
        <Setter Property="GlyphBrush" Value="#FF606060"/>
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
                    <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="EditableBackground" Value="#FFFFFFFF"/>
        <Setter Property="EditableBorderBrush" Value="#FFABADB3"/>
        <Setter Property="EditableButtonBackground" Value="Transparent"/>
        <Setter Property="EditableButtonBorderBrush" Value="Transparent"/>

        <!--HoverState-->
        <Setter Property="HoverBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFECF4FC" Offset="0.0"/>
                    <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HoverBorderBrush" Value="#FF7EB4EA"/>
        <Setter Property="HoverGlyphBrush" Value="#FF000000"/>
        <Setter Property="EditableHoverBackground" Value="#FFFFFFFF"/>
        <Setter Property="EditableHoverBorderBrush" Value="#FF7EB4EA"/>
        <Setter Property="EditableButtonHoverBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
                    <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="EditableButtonHoverBorderBrush" Value="#FF7EB4EA"/>

        <!--PressedState-->
        <Setter Property="PressedBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFDAECFC" Offset="0.0"/>
                    <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="PressedBorderBrush" Value="#FF569DE5"/>
        <Setter Property="PressedGlyphBrush" Value="#FF000000"/>
        <Setter Property="EditablePressedBackground" Value="#FFFFFFFF"/>
        <Setter Property="EditablePressedBorderBrush" Value="#FF569DE5"/>
        <Setter Property="EditableButtonPressedBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
                    <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="EditableButtonPressedBorderBrush" Value="#FF569DE5"/>

        <!--DisabledState-->
        <Setter Property="DisabledBackground" Value="#FFF0F0F0"/>
        <Setter Property="DisabledBorderBrush" Value="#FFD9D9D9"/>
        <Setter Property="DisabledGlyphBrush" Value="#FFBFBFBF"/>
        <Setter Property="EditableDisabledBackground" Value="#FFFFFFFF"/>
        <Setter Property="EditableDisabledBorderBrush" Value="#FFBFBFBF"/>
        <Setter Property="EditableButtonDisabledBackground" Value="Transparent"/>
        <Setter Property="EditableButtonDisabledBorderBrush" Value="Transparent"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>