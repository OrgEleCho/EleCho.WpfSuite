<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:i="clr-namespace:EleCho.WpfSuite.Internal"
                    xmlns:local="clr-namespace:EleCho.WpfSuite.Controls"
                    xmlns:wss="clr-namespace:EleCho.WpfSuite.Controls.States"
                    xmlns:smk="clr-namespace:EleCho.WpfSuite.Controls.States.Markup">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <local:ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type local:ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleButton}">
                    <Border x:Name="templateRoot"
                            Background="{smk:ShowingProperty Property=Background}"
                            BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                            Padding="{smk:ShowingProperty Property=Padding}"
                            BorderThickness="{smk:ShowingProperty Property=BorderThickness}"
                            CornerRadius="{smk:ShowingProperty Property=CornerRadius}"
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                HorizontalAlignment="Right"
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Fill="{smk:ShowingProperty Property=GlyphBrush}"
                                  HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type local:ComboBox}">
        <Border x:Name="border"
                Background="{smk:ShowingProperty Property=Background}"
                BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                BorderThickness="{smk:ShowingProperty Property=BorderThickness}"
                CornerRadius="{smk:ShowingProperty Property=CornerRadius}">
            <local:BorderContentAdapter ClipToBounds="{TemplateBinding ClipToBounds}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <local:Popup x:Name="PART_Popup"
                                 AllowsTransparency="true"
                                 Grid.ColumnSpan="2"
                                 IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                 Placement="Bottom"
                                 PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <i:SystemDropShadowChrome x:Name="shadow"
                                                  Color="Transparent"
                                                  CornerRadius="{TemplateBinding PopupCornerRadius}"
                                                  MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <local:ContentControl Transition="{TemplateBinding PopupContentTransition}"
                                                  TransitionMode="{TemplateBinding PopupContentTransitionMode}">
                                <Border x:Name="dropDownBorder"
                                        Background="{TemplateBinding PopupBackground}"
                                        BorderThickness="{TemplateBinding PopupBorderThickness}"
                                        BorderBrush="{TemplateBinding PopupBorderBrush}"
                                        CornerRadius="{TemplateBinding PopupCornerRadius}">
                                    <local:BorderContentAdapter ClipToBounds="{TemplateBinding ClipToBounds}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Border x:Name="opaqueRect"
                                                            Background="{Binding Background, ElementName=dropDownBorder}"
                                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                            CornerRadius="{TemplateBinding PopupCornerRadius}"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" 
                                                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </local:BorderContentAdapter>
                                </Border>
                            </local:ContentControl>
                        </i:SystemDropShadowChrome>
                    </local:Popup>
                    <local:TextBox x:Name="PART_EditableTextBox"
                                   Foreground="{smk:ShowingProperty Property=Foreground}"
                                   Margin="{smk:ShowingProperty Property=Padding}"
                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                   IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   Style="{StaticResource ComboBoxEditableTextBox}"/>
                    <local:ToggleButton x:Name="toggleButton"
                                        Grid.Column="1"
                                        wss:StateManager.Background="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonBackground}"
                                        wss:StateManager.BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonBorderBrush}"
                                        wss:StateManager.Padding="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonPadding}"
                                        wss:StateManager.BorderThickness="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonBorderThickness}"
                                        wss:StateManager.CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonCornerRadius}"
                                        wss:StateManager.GlyphBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=GlyphBrush}"
                                        wss:StateManager.HoverBackground="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonHoverBackground}"
                                        wss:StateManager.HoverBorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonHoverBorderBrush}"
                                        wss:StateManager.HoverPadding="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonHoverPadding}"
                                        wss:StateManager.HoverBorderThickness="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonHoverBorderThickness}"
                                        wss:StateManager.HoverCornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonHoverCornerRadius}"
                                        wss:StateManager.HoverGlyphBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=HoverGlyphBrush}"
                                        wss:StateManager.PressedBackground="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonPressedBackground}"
                                        wss:StateManager.PressedBorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonPressedBorderBrush}"
                                        wss:StateManager.PressedPadding="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonPressedPadding}"
                                        wss:StateManager.PressedBorderThickness="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonPressedBorderThickness}"
                                        wss:StateManager.PressedCornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonPressedCornerRadius}"
                                        wss:StateManager.PressedGlyphBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=PressedGlyphBrush}"
                                        wss:StateManager.DisabledBackground="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonDisabledBackground}"
                                        wss:StateManager.DisabledBorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonDisabledBorderBrush}"
                                        wss:StateManager.DisabledPadding="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonDisabledPadding}"
                                        wss:StateManager.DisabledBorderThickness="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonDisabledBorderThickness}"
                                        wss:StateManager.DisabledCornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=EditableButtonDisabledCornerRadius}"
                                        wss:StateManager.DisabledGlyphBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=DisabledGlyphBrush}"
                                        ClipToBounds="{TemplateBinding ClipToBounds}"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Style="{StaticResource ComboBoxToggleButton}"/>
                </Grid>
            </local:BorderContentAdapter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Hover"/>
            </Trigger>
            <Trigger SourceName="PART_EditableTextBox" Property="IsKeyboardFocused" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Focused"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="wss:StateManager.ActiveState" Value="Disabled"/>
            </Trigger>

            <Trigger SourceName="toggleButton" Property="IsMouseOver" Value="True">
                <Setter TargetName="toggleButton" Property="wss:StateManager.ActiveState" Value="Hover"/>
            </Trigger>
            <Trigger SourceName="toggleButton" Property="IsPressed" Value="True">
                <Setter TargetName="toggleButton" Property="wss:StateManager.ActiveState" Value="Pressed"/>
            </Trigger>
            <Trigger SourceName="toggleButton" Property="IsEnabled" Value="False">
                <Setter TargetName="toggleButton" Property="wss:StateManager.ActiveState" Value="Disabled"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type local:ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <local:Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <i:SystemDropShadowChrome x:Name="shadow"
                                          Color="Transparent"
                                          CornerRadius="{TemplateBinding PopupCornerRadius}"
                                          MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <local:ContentControl Transition="{TemplateBinding PopupContentTransition}"
                                          TransitionMode="{TemplateBinding PopupContentTransitionMode}">
                        <local:Border x:Name="dropDownBorder"
                                      Background="{TemplateBinding PopupBackground}"
                                      TextElement.Foreground="{TemplateBinding PopupForeground}"
                                      BorderBrush="{TemplateBinding PopupBorderBrush}"
                                      Padding="{TemplateBinding PopupPadding}"
                                      BorderThickness="{TemplateBinding PopupBorderThickness}"
                                      CornerRadius="{TemplateBinding PopupCornerRadius}">
                            <local:ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Border x:Name="opaqueRect"
                                                Background="{Binding Background, ElementName=dropDownBorder}"
                                                Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                CornerRadius="{TemplateBinding PopupCornerRadius}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </local:ScrollViewer>
                        </local:Border>
                    </local:ContentControl>
                </i:SystemDropShadowChrome>
            </local:Popup>
            <local:ToggleButton x:Name="toggleButton"
                                wss:StateManager.Background="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=Background}"
                                wss:StateManager.BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=BorderBrush}"
                                wss:StateManager.BorderThickness="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=BorderThickness}"
                                wss:StateManager.CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=CornerRadius}"
                                wss:StateManager.GlyphBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=GlyphBrush}"
                                wss:StateManager.HoverBackground="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=HoverBackground}"
                                wss:StateManager.HoverBorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=HoverBorderBrush}"
                                wss:StateManager.HoverBorderThickness="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=HoverBorderThickness}"
                                wss:StateManager.HoverCornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=HoverCornerRadius}"
                                wss:StateManager.HoverGlyphBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=HoverGlyphBrush}"
                                wss:StateManager.PressedBackground="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=PressedBackground}"
                                wss:StateManager.PressedBorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=PressedBorderBrush}"
                                wss:StateManager.PressedBorderThickness="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=PressedBorderThickness}"
                                wss:StateManager.PressedCornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=PressedCornerRadius}"
                                wss:StateManager.PressedGlyphBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=PressedGlyphBrush}"
                                wss:StateManager.DisabledBackground="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=DisabledBackground}"
                                wss:StateManager.DisabledBorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=DisabledBorderBrush}"
                                wss:StateManager.DisabledBorderThickness="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=DisabledBorderThickness}"
                                wss:StateManager.DisabledCornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=DisabledCornerRadius}"
                                wss:StateManager.DisabledGlyphBrush="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox},Path=DisabledGlyphBrush}"
                                ClipToBounds="{TemplateBinding ClipToBounds}"
                                Grid.ColumnSpan="2"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Style="{StaticResource ComboBoxToggleButton}">
            </local:ToggleButton>
            <Border x:Name="PART_Border"
                    BorderThickness="{smk:ShowingProperty Property=BorderThickness}"
                    Padding="{smk:ShowingProperty Property=Padding}"
                    CornerRadius="{smk:ShowingProperty Property=CornerRadius}">
                <local:BorderContentAdapter>
                    <ContentPresenter x:Name="contentPresenter"
                                      TextElement.Foreground="{smk:ShowingProperty Property=Foreground}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      IsHitTestVisible="false"/>
                </local:BorderContentAdapter>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Hover"/>
            </Trigger>
            <Trigger SourceName="toggleButton" Property="IsPressed" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Pressed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="wss:StateManager.ActiveState" Value="Disabled"/>
            </Trigger>

            <Trigger SourceName="toggleButton" Property="IsMouseOver" Value="True">
                <Setter TargetName="toggleButton" Property="wss:StateManager.ActiveState" Value="Hover"/>
            </Trigger>
            <Trigger SourceName="toggleButton" Property="IsPressed" Value="True">
                <Setter TargetName="toggleButton" Property="wss:StateManager.ActiveState" Value="Pressed"/>
            </Trigger>
            <Trigger SourceName="toggleButton" Property="IsEnabled" Value="False">
                <Setter TargetName="toggleButton" Property="wss:StateManager.ActiveState" Value="Disabled"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type local:ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
        <Setter Property="PopupBorderThickness" Value="1"/>

        <!--NormalState-->
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="GlyphBrush" Value="#FF606060"/>
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
                    <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="EditableButtonBorderThickness" Value="1"/>
        <Setter Property="EditableButtonBackground" Value="Transparent"/>
        <Setter Property="EditableButtonBorderBrush" Value="Transparent"/>

        <!--HoverState-->
        <Setter Property="HoverBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFECF4FC" Offset="0.0"/>
                    <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HoverBorderBrush" Value="#FF7EB4EA"/>
        <Setter Property="HoverGlyphBrush" Value="#FF000000"/>
        <Setter Property="EditableButtonHoverBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
                    <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="EditableButtonHoverBorderBrush" Value="#FF7EB4EA"/>

        <!--PressedState-->
        <Setter Property="PressedBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFDAECFC" Offset="0.0"/>
                    <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="PressedBorderBrush" Value="#FF569DE5"/>
        <Setter Property="PressedGlyphBrush" Value="#FF000000"/>
        <Setter Property="EditableButtonPressedBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
                    <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="EditableButtonPressedBorderBrush" Value="#FF569DE5"/>

        <!--DisabledState-->
        <Setter Property="DisabledBackground" Value="#FFF0F0F0"/>
        <Setter Property="DisabledBorderBrush" Value="#FFD9D9D9"/>
        <Setter Property="DisabledGlyphBrush" Value="#FFBFBFBF"/>
        <Setter Property="EditableButtonDisabledBackground" Value="Transparent"/>
        <Setter Property="EditableButtonDisabledBorderBrush" Value="Transparent"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <!--StateManager-->
        <Setter Property="wss:StateManager.Background" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Background}"/>
        <Setter Property="wss:StateManager.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Foreground}"/>
        <Setter Property="wss:StateManager.BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=BorderBrush}"/>
        <Setter Property="wss:StateManager.Padding" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Padding}"/>
        <Setter Property="wss:StateManager.BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=BorderThickness}"/>
        <Setter Property="wss:StateManager.CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=CornerRadius}"/>

        <Setter Property="wss:StateManager.DefaultTransitionDuration" Value="0:0:0.200"/>
        <Setter Property="wss:StateManager.HoverTransitionDuration" Value="0:0:0.100"/>
        <Setter Property="wss:StateManager.PressedTransitionDuration" Value="0:0:0"/>

        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="Background" Value="#FFFFFFFF"/>
                <Setter Property="BorderBrush" Value="#FFABADB3"/>

                <!--Hover-->
                <Setter Property="HoverBackground" Value="#FFFFFFFF"/>
                <Setter Property="HoverBorderBrush" Value="#FF7EB4EA"/>

                <!--Hover-->
                <Setter Property="FocusedBackground" Value="#FFFFFFFF"/>
                <Setter Property="FocusedBorderBrush" Value="#FF7EB4EA"/>

                <!--Pressed-->
                <Setter Property="PressedBackground" Value="#FFFFFFFF"/>
                <Setter Property="PressedBorderBrush" Value="#FF569DE5"/>

                <!--Disabled-->
                <Setter Property="DisabledBackground" Value="#FFFFFFFF"/>
                <Setter Property="DisabledBorderBrush" Value="#FFBFBFBF"/>

                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>