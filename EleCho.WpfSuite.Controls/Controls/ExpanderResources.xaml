<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:local="clr-namespace:EleCho.WpfSuite.Controls">
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" StrokeDashArray="1 2" Stroke="Black" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type local:ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleButton}">
                    <local:Border x:Name="border" Padding="{TemplateBinding Padding}"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleFill}" HorizontalAlignment="Center" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleDiameter}"
                                     Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleStroke}" VerticalAlignment="Center" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleDiameter}"/>
                            <Path x:Name="arrow" Data="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=ArrowGeometry}" HorizontalAlignment="Center" Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=ArrowStroke}" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center"/>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </local:Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Expander},Path=HeaderIconPosition}"
                                     Value="{x:Static local:ExpanderHeaderIconPosition.End}">
                            <Setter Property="Grid.Column" TargetName="circle" Value="2"/>
                            <Setter Property="Grid.Column" TargetName="arrow" Value="2"/>
                        </DataTrigger>
                        <Trigger Property="ClipToBounds" Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="Clip"
                                    Value="{Binding ElementName=border,Path=ContentClip}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HoverBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HoverBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HoverForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="PressedBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="PressedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="PressedForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" >
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ExpandedArrowGeometry"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowGeometry"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type local:ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleButton}">
                    <local:Border x:Name="border" Padding="{TemplateBinding Padding}"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleFill}" HorizontalAlignment="Center" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleDiameter}"
                                         Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleStroke}" VerticalAlignment="Center" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleDiameter}"/>
                                <Path x:Name="arrow" Data="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=ArrowGeometry}" HorizontalAlignment="Center" Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=ArrowStroke}" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </local:Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Expander},Path=HeaderIconPosition}"
                                     Value="{x:Static local:ExpanderHeaderIconPosition.End}">
                            <Setter Property="Grid.Column" TargetName="circle" Value="2"/>
                            <Setter Property="Grid.Column" TargetName="arrow" Value="2"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" >
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ExpandedArrowGeometry"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowGeometry"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type local:ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleButton}">
                    <local:Border x:Name="border" Padding="{TemplateBinding Padding}"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleFill}" HorizontalAlignment="Center" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleDiameter}"
                                         Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleStroke}" VerticalAlignment="Center" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleDiameter}"/>
                                <Path x:Name="arrow" Data="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=ArrowGeometry}" HorizontalAlignment="Center" Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=ArrowStroke}" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" Margin="0,4,0,0" RecognizesAccessKey="True" Grid.Row="1" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </local:Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Expander},Path=HeaderIconPosition}"
                                     Value="{x:Static local:ExpanderHeaderIconPosition.End}">
                            <Setter Property="Grid.Row" TargetName="circle" Value="2"/>
                            <Setter Property="Grid.Row" TargetName="arrow" Value="2"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="true">

                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" >
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ExpandedArrowGeometry"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowGeometry"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type local:ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleButton}">
                    <local:Border x:Name="border" Padding="{TemplateBinding Padding}"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleFill}" HorizontalAlignment="Center" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleDiameter}"
                                         Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleStroke}" VerticalAlignment="Center" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=CircleDiameter}"/>
                                <Path x:Name="arrow" Data="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=ArrowGeometry}" HorizontalAlignment="Center" Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:Expander},Path=ArrowStroke}" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" Margin="0,4,0,0" RecognizesAccessKey="True" Grid.Row="1" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </local:Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Expander},Path=HeaderIconPosition}"
                                     Value="{x:Static local:ExpanderHeaderIconPosition.End}">
                            <Setter Property="Grid.Row" TargetName="circle" Value="2"/>
                            <Setter Property="Grid.Row" TargetName="arrow" Value="2"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="PressedArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="HoverArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" >
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ExpandedArrowGeometry"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowGeometry"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledCircleStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="circle">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledCircleFill"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="CircleFill"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="arrow">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="DisabledArrowStroke"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=local:Expander}" Path="ArrowStroke"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:Expander}">
        <Setter Property="CircleStroke" Value="#FF333333"/>
        <Setter Property="CircleFill" Value="#FFFFFFFF"/>
        <Setter Property="ArrowStroke" Value="#FF333333"/>
        <Setter Property="HoverCircleStroke" Value="#FF5593FF"/>
        <Setter Property="HoverCircleFill" Value="#FFF3F9FF"/>
        <Setter Property="HoverArrowStroke" Value="#FF000000"/>
        <Setter Property="PressedCircleStroke" Value="#FF3C77DD"/>
        <Setter Property="PressedCircleFill" Value="#FFD9ECFF"/>
        <Setter Property="PressedArrowStroke" Value="#FF000000"/>
        <Setter Property="DisabledCircleStroke" Value="#FFBCBCBC"/>
        <Setter Property="DisabledCircleFill" Value="#FFE6E6E6"/>
        <Setter Property="DisabledArrowStroke" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HeaderForeground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CircleDiameter" Value="19"/>
        <Setter Property="ArrowGeometry" Value="M 1,1.5 L 4.5,5 L 8,1.5"/>
        <Setter Property="ExpandedArrowGeometry" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HeaderMargin" Value="1"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="HeaderCornerRadius" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Expander}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <local:ToggleButton x:Name="HeaderSite"
                                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                Content="{TemplateBinding Header}"
                                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                DockPanel.Dock="Top"
                                                FontStretch="{TemplateBinding FontStretch}"
                                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                                FontStyle="{TemplateBinding FontStyle}"
                                                FontFamily="{TemplateBinding FontFamily}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                FontSize="{TemplateBinding FontSize}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                Margin="{TemplateBinding HeaderMargin}"
                                                Padding="{TemplateBinding HeaderPadding}"
                                                MinWidth="0" MinHeight="0"
                                                Style="{StaticResource ExpanderDownHeaderStyle}"
                                                Foreground="{TemplateBinding HeaderForeground}"
                                                Background="{TemplateBinding HeaderBackground}"
                                                BorderBrush="{TemplateBinding HeaderBorderBrush}"
                                                HoverForeground="{TemplateBinding HeaderHoverForeground}"
                                                HoverBackground="{TemplateBinding HeaderHoverBackground}"
                                                HoverBorderBrush="{TemplateBinding HeaderHoverBorderBrush}"
                                                PressedForeground="{TemplateBinding HeaderPressedForeground}"
                                                PressedBackground="{TemplateBinding HeaderPressedBackground}"
                                                PressedBorderBrush="{TemplateBinding HeaderPressedBorderBrush}"
                                                CheckedForeground="{TemplateBinding HeaderCheckedForeground}"
                                                CheckedBackground="{TemplateBinding HeaderCheckedBackground}"
                                                CheckedBorderBrush="{TemplateBinding HeaderCheckedBorderBrush}"
                                                DisabledForeground="{TemplateBinding HeaderDisabledForeground}"
                                                DisabledBackground="{TemplateBinding HeaderDisabledBackground}"
                                                DisabledBorderBrush="{TemplateBinding HeaderDisabledBorderBrush}"
                                                BorderThickness="{TemplateBinding HeaderBorderThickness}"
                                                CornerRadius="{TemplateBinding HeaderCornerRadius}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>