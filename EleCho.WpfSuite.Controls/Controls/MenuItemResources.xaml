<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:local="clr-namespace:EleCho.WpfSuite.Controls"
                    xmlns:wss="clr-namespace:EleCho.WpfSuite.Controls.States"
                    xmlns:smk="clr-namespace:EleCho.WpfSuite.Controls.States.Markup">

    <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
    <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
    <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="templateRoot" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                        </RepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type local:MenuItem}}" TargetType="{x:Type local:MenuItem}">
        <Border x:Name="templateRoot"
                Background="{smk:ShowingProperty Property=Background}"
                BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                BorderThickness="{smk:ShowingProperty Property=BorderThickness}"
                CornerRadius="{smk:ShowingProperty Property=CornerRadius}"
                SnapsToDevicePixels="true">
            <local:BorderContentAdapter ClipToBounds="{TemplateBinding ClipToBounds}">
                <Grid x:Name="PART_ContentContainer"
                      Margin="{smk:ShowingProperty Property=Padding}"
                      VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel"
                          Data="{StaticResource Checkmark}"
                          FlowDirection="LeftToRight"
                          Fill="{smk:ShowingProperty Property=Foreground}"
                          Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
                    <ContentPresenter ContentSource="Header"
                                      Grid.Column="1"
                                      TextElement.Foreground="{smk:ShowingProperty Property=Foreground}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
            </local:BorderContentAdapter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="wss:StateManager.ActiveState" Value="Checked"/>
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Highlighted"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Pressed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="wss:StateManager.ActiveState" Value="Disabled"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="wss:StateManager.ActiveState" Value="HighlightedDisabled"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type local:MenuItem}}" TargetType="{x:Type local:MenuItem}">
        <Border x:Name="templateRoot"
                Background="{smk:ShowingProperty Property=Background}"
                TextElement.Foreground="{smk:ShowingProperty Property=Foreground}"
                BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                BorderThickness="{smk:ShowingProperty Property=BorderThickness}"
                CornerRadius="{smk:ShowingProperty Property=CornerRadius}"
                SnapsToDevicePixels="true">
            <local:BorderContentAdapter ClipToBounds="{TemplateBinding ClipToBounds}">
                <Grid x:Name="PART_ContentContainer"
                      Margin="{smk:ShowingProperty Property=Padding}"
                      VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{TemplateBinding Foreground}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
                    <ContentPresenter ContentSource="Header" Grid.Column="1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <local:Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=templateRoot}">
                        <local:ContentControl Transition="{TemplateBinding PopupContentTransition}"
                                              TransitionMode="{TemplateBinding PopupContentTransitionMode}">
                            <Border x:Name="SubMenuBorder"
                                    Background="{TemplateBinding PopupBackground}"
                                    BorderBrush="{TemplateBinding PopupBorderBrush}"
                                    BorderThickness="{TemplateBinding PopupBorderThickness}"
                                    CornerRadius="{TemplateBinding PopupCornerRadius}"
                                    Padding="{TemplateBinding PopupPadding}">
                                <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                        </Canvas>
                                        <Rectangle HorizontalAlignment="Left" Margin="29,2,0,2" Width="1" Fill="{TemplateBinding SeparatorBrush}"/>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </local:ContentControl>
                    </local:Popup>
                </Grid>
            </local:BorderContentAdapter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                <Setter Property="wss:StateManager.ActiveState" Value="Checked"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Highlighted"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Pressed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="wss:StateManager.ActiveState" Value="Disabled"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="wss:StateManager.ActiveState" Value="HighlightedDisabled"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type local:MenuItem}}" TargetType="{x:Type local:MenuItem}">
        <Border x:Name="templateRoot"
                Background="{smk:ShowingProperty Property=Background}"
                TextElement.Foreground="{smk:ShowingProperty Property=Foreground}"
                BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                BorderThickness="{smk:ShowingProperty Property=BorderThickness}"
                CornerRadius="{smk:ShowingProperty Property=CornerRadius}"
                SnapsToDevicePixels="true">
            <local:BorderContentAdapter ClipToBounds="{TemplateBinding ClipToBounds}">
                <Grid Margin="{smk:ShowingProperty Property=Padding}">
                    <Grid Name="PART_ContentContainer" Margin="-1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="13"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                        <Border x:Name="GlyphPanel"
                                BorderThickness="1"
                                ClipToBounds="False"
                                HorizontalAlignment="Center"
                                Margin="-1,0,0,0"
                                VerticalAlignment="Center"
                                Visibility="Hidden" Width="22">
                            <TextElement.Foreground>
                                <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="SelectedForeground"/>
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                </MultiBinding>
                            </TextElement.Foreground>
                            <Border.Background>
                                <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="SelectedBackground"/>
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                </MultiBinding>
                            </Border.Background>
                            <Border.BorderBrush>
                                <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="SelectedBorderBrush"/>
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="10"/>
                        </Border>
                        <ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <TextBlock x:Name="menuGestureText" Grid.Column="4" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    </Grid>
                </Grid>
            </local:BorderContentAdapter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                <Setter Property="wss:StateManager.ActiveState" Value="Checked"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Highlighted"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Pressed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="wss:StateManager.ActiveState" Value="Disabled"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="wss:StateManager.ActiveState" Value="HighlightedDisabled"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type local:MenuItem}}" TargetType="{x:Type local:MenuItem}">
        <Border x:Name="templateRoot"
                Background="{smk:ShowingProperty Property=Background}"
                TextElement.Foreground="{smk:ShowingProperty Property=Foreground}"
                BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                BorderThickness="{smk:ShowingProperty Property=BorderThickness}"
                CornerRadius="{smk:ShowingProperty Property=CornerRadius}"
                SnapsToDevicePixels="true">
            <local:BorderContentAdapter ClipToBounds="{TemplateBinding ClipToBounds}">
                <Grid Margin="{smk:ShowingProperty Property=Padding}">
                    <Grid x:Name="PART_ContentContainer"
                          Margin="-1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="13"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                        <Border x:Name="GlyphPanel" BorderThickness="1" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                            <TextElement.Foreground>
                                <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HighlightedForeground"/>
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                </MultiBinding>
                            </TextElement.Foreground>
                            <Border.Background>
                                <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HighlightedBackground"/>
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                </MultiBinding>
                            </Border.Background>
                            <Border.BorderBrush>
                                <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HighlightedBorderBrush"/>
                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{smk:ShowingProperty Property=Foreground}" Height="11" Width="9"/>
                        </Border>
                        <ContentPresenter ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                        <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{smk:ShowingProperty Property=Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                        <local:Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                            <local:ContentControl Transition="{TemplateBinding PopupContentTransition}"
                                                  TransitionMode="{TemplateBinding PopupContentTransitionMode}">
                                <Border x:Name="SubMenuBorder"
                                        Background="{TemplateBinding PopupBackground}"
                                        BorderBrush="{TemplateBinding PopupBorderBrush}"
                                        BorderThickness="{TemplateBinding PopupBorderThickness}"
                                        CornerRadius="{TemplateBinding PopupCornerRadius}"
                                        Padding="{TemplateBinding PopupPadding}">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                            </Canvas>
                                            <Rectangle Fill="{TemplateBinding SeparatorBrush}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </local:ContentControl>
                        </local:Popup>
                    </Grid>
                </Grid>
            </local:BorderContentAdapter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                <Setter Property="wss:StateManager.ActiveState" Value="Checked"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Highlighted"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="wss:StateManager.ActiveState" Value="Pressed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="wss:StateManager.ActiveState" Value="Disabled"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="wss:StateManager.ActiveState" Value="HighlightedDisabled"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type local:MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="SeparatorBrush" Value="#FFD7D7D7"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="SelectedBackground" Value="#3D26A0DA"/>
        <Setter Property="SelectedBorderBrush" Value="#FF26A0DA"/>
        <Setter Property="HighlightedBackground" Value="#3D26A0DA"/>
        <Setter Property="HighlightedBorderBrush" Value="#FF26A0DA"/>
        <Setter Property="HighlightedDisabledBackground" Value="#0A000000"/>
        <Setter Property="HighlightedDisabledBorderBrush" Value="#21000000"/>
        <Setter Property="PopupBackground" Value="#FFF0F0F0"/>
        <Setter Property="PopupBorderThickness" Value="1"/>
        <Setter Property="PopupBorderBrush" Value="#999999"/>
        <Setter Property="PopupPadding" Value="2"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type local:MenuItem}}}"/>

        <Setter Property="wss:StateManager.Background" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Background}"/>
        <Setter Property="wss:StateManager.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Foreground}"/>
        <Setter Property="wss:StateManager.BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=BorderBrush}"/>
        <Setter Property="wss:StateManager.Padding" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Padding}"/>
        <Setter Property="wss:StateManager.BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=BorderThickness}"/>
        <Setter Property="wss:StateManager.CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=CornerRadius}"/>

        <Setter Property="wss:StateManager.DefaultTransitionDuration" Value="0:0:0.100"/>
        <Setter Property="wss:StateManager.HoverTransitionDuration" Value="0:0:0.50"/>
        <Setter Property="wss:StateManager.PressedTransitionDuration" Value="0:0:0"/>

        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="MinHeight" Value="16"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="#FF212121"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type local:MenuItem}}}"/>
                <Setter Property="Padding" Value="6,0"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="MinHeight" Value="16"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="#FF212121"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type local:MenuItem}}}"/>
                <Setter Property="Padding" Value="6,0"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="MinHeight" Value="22"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type local:MenuItem}}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>