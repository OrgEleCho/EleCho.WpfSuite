<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:local="clr-namespace:EleCho.WpfSuite.Controls"
                    xmlns:wss="clr-namespace:EleCho.WpfSuite.Controls.States"
                    xmlns:smk="clr-namespace:EleCho.WpfSuite.Controls.States.Markup">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>

        <Setter Property="Glyph" Value="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z"/>

        <Setter Property="Spacing" Value="6"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="GlyphBrush" Value="#FF212121"/>
        <Setter Property="HoverBackground" Value="#FFF3F9FF"/>
        <Setter Property="HoverBorderBrush" Value="#FF5593FF"/>
        <Setter Property="HoverGlyphBrush" Value="#FF212121"/>
        <Setter Property="PressedBackground" Value="#FFD9ECFF"/>
        <Setter Property="PressedBorderBrush" Value="#FF3C77DD"/>
        <Setter Property="PressedGlyphBrush" Value="#FF212121"/>
        <Setter Property="DisabledForeground" Value="#707070"/>
        <Setter Property="DisabledBackground" Value="#FFE6E6E6"/>
        <Setter Property="DisabledBorderBrush" Value="#FFBCBCBC"/>
        <Setter Property="DisabledGlyphBrush" Value="#FF707070"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="wss:StateManager.Background" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Background}"/>
        <Setter Property="wss:StateManager.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Foreground}"/>
        <Setter Property="wss:StateManager.BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=BorderBrush}"/>
        <Setter Property="wss:StateManager.Padding" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Padding}"/>
        <Setter Property="wss:StateManager.BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=BorderThickness}"/>
        <Setter Property="wss:StateManager.CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=CornerRadius}"/>

        <Setter Property="wss:StateManager.DefaultTransitionDuration" Value="0:0:0.200"/>
        <Setter Property="wss:StateManager.HoverTransitionDuration" Value="0:0:0.100"/>
        <Setter Property="wss:StateManager.PressedTransitionDuration" Value="0:0:0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                Background="{smk:ShowingProperty Property=Background}"
                                BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                                BorderThickness="{smk:ShowingProperty Property=BorderThickness}"
                                CornerRadius="{smk:ShowingProperty Property=CornerRadius}"
                                HorizontalAlignment="{TemplateBinding HorizontalCheckerAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalCheckerAlignment}" >
                            <Grid x:Name="markGrid"
                                  Width="12"
                                  Height="11.5"
                                  Margin="{smk:ShowingProperty Property=CheckerPadding}">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                      Fill="{smk:ShowingProperty Property=GlyphBrush}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Fill="{smk:ShowingProperty Property=GlyphBrush}"
                                           Opacity="0"/>
                            </Grid>
                        </Border>

                        <FrameworkElement Grid.Column="1"
                                          Width="{TemplateBinding Spacing}"/>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="2"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{smk:ShowingProperty Property=Foreground}"
                                          Margin="{smk:ShowingProperty Property=Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="wss:StateManager.ActiveState" Value="Hover"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="wss:StateManager.ActiveState" Value="Pressed"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="wss:StateManager.ActiveState" Value="Disabled"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>