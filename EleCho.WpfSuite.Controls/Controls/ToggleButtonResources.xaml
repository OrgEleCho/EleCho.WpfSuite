<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:local="clr-namespace:EleCho.WpfSuite.Controls">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="HoverBackground" Value="#FFBEE6FD"/>
        <Setter Property="HoverBorderBrush" Value="#FF3C7FB1"/>
        <Setter Property="PressedBackground" Value="#FFC4E5F6"/>
        <Setter Property="PressedBorderBrush" Value="#FF2C628B"/>
        <Setter Property="CheckedBackground" Value="#FFBCDDEE"/>
        <Setter Property="CheckedBorderBrush" Value="#FF245A83"/>
        <Setter Property="DisabledBackground" Value="#FFF4F4F4"/>
        <Setter Property="DisabledBorderBrush" Value="#FFADB2B5"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="DisabledForeground" Value="#FF838383"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleButton}">
                    <local:Border x:Name="border" 
                                  Background="{TemplateBinding Background}" 
                                  BorderBrush="{TemplateBinding BorderBrush}" 
                                  BorderThickness="{TemplateBinding BorderThickness}" 
                                  CornerRadius="{TemplateBinding CornerRadius}" 
                                  SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </local:Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ClipToBounds" Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="Clip"
                                    Value="{Binding ElementName=border,Path=ContentClip}"/>
                        </Trigger>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HighlightBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--Hover styles bellow-->

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HoverBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HoverBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="HoverForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--Pressed styles bellow-->

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="PressedBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="PressedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="PressedForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--Checked styles bellow-->

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="CheckedForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--Disabled styles bellow-->

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBackground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Background"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledBorderBrush"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="BorderBrush"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{x:Static ws:FallbackConverter.Instance}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="DisabledForeground"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Foreground"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>