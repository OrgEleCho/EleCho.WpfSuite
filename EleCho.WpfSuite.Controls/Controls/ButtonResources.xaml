<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:local="clr-namespace:EleCho.WpfSuite.Controls"
                    xmlns:wss="clr-namespace:EleCho.WpfSuite.Controls.States"
                    xmlns:smk="clr-namespace:EleCho.WpfSuite.Controls.States.Markup">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="HoverBackground" Value="#FFBEE6FD"/>
        <Setter Property="HoverBorderBrush" Value="#FF3C7FB1"/>
        <Setter Property="PressedBackground" Value="#FFC4E5F6"/>
        <Setter Property="PressedBorderBrush" Value="#FF2C628B"/>
        <Setter Property="DisabledBackground" Value="#FFF4F4F4"/>
        <Setter Property="DisabledForeground" Value="#FF838383"/>
        <Setter Property="DisabledBorderBrush" Value="#FFADB2B5"/>
        <Setter Property="HighlightedBorderBrush" Value="{x:Static SystemColors.HighlightBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>

        <Setter Property="wss:StateManager.Background" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Background}"/>
        <Setter Property="wss:StateManager.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Foreground}"/>
        <Setter Property="wss:StateManager.BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=BorderBrush}"/>
        <Setter Property="wss:StateManager.Padding" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Padding}"/>
        <Setter Property="wss:StateManager.BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=BorderThickness}"/>
        <Setter Property="wss:StateManager.CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=CornerRadius}"/>

        <Setter Property="wss:StateManager.DefaultTransitionDuration" Value="0:0:0.200"/>
        <Setter Property="wss:StateManager.HoverTransitionDuration" Value="0:0:0.100"/>
        <Setter Property="wss:StateManager.PressedTransitionDuration" Value="0:0:0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Button}">
                    <local:Border x:Name="border"
                                  Background="{smk:ShowingProperty Property=Background}"
                                  BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                                  BorderThickness="{smk:ShowingProperty Property=BorderThickness}"
                                  CornerRadius="{smk:ShowingProperty Property=CornerRadius}"
                                  SnapsToDevicePixels="true">
                        <local:BorderContentAdapter ClipToBounds="{TemplateBinding ClipToBounds}">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              Margin="{smk:ShowingProperty Property=Padding}"
                                              TextElement.Foreground="{smk:ShowingProperty Property=Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </local:BorderContentAdapter>
                    </local:Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="wss:StateManager.ActiveState" Value="Highlighted"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="wss:StateManager.ActiveState" Value="Hover"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="wss:StateManager.ActiveState" Value="Pressed"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="wss:StateManager.ActiveState" Value="Disabled"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>