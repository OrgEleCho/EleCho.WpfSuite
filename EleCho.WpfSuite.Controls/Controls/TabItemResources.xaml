<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:local="clr-namespace:EleCho.WpfSuite.Controls"
                    xmlns:wss="clr-namespace:EleCho.WpfSuite.Controls.States"
                    xmlns:smk="clr-namespace:EleCho.WpfSuite.Controls.States.Markup">
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#F0F0F0" Offset="0.0"/>
                    <GradientStop Color="#E5E5E5" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#ACACAC"/>
        <Setter Property="HoverBackground" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#ECF4FC" Offset="0.0"/>
                    <GradientStop Color="#DCECFC" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HoverBorderBrush" Value="#7EB4EA"/>
        <Setter Property="SelectedBackground" Value="#FFFFFF"/>
        <Setter Property="SelectedBorderBrush" Value="#ACACAC"/>
        <Setter Property="DisabledBackground" Value="#F0F0F0"/>
        <Setter Property="DisabledBorderBrush" Value="#D9D9D9"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <local:Border x:Name="mainBorder"
                                      Background="{smk:ShowingProperty Property=Background}"
                                      BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                                      CornerRadius="{smk:ShowingProperty Property=CornerRadius}"
                                      BorderThickness="1,1,1,0" Margin="0">
                            <Border x:Name="innerBorder"
                                    Background="{smk:ShowingProperty Property=Background}"
                                    BorderBrush="{smk:ShowingProperty Property=BorderBrush}"
                                    CornerRadius="{smk:ShowingProperty Property=CornerRadius}"
                                    BorderThickness="1,1,1,0" Margin="-1" Opacity="0">
                            </Border>
                        </local:Border>
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentSource="Header"
                                          Focusable="False"
                                          Margin="{smk:ShowingProperty Property=Padding}"
                                          RecognizesAccessKey="True"
                                          TextElement.Foreground="{smk:ShowingProperty Property=Foreground}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="wss:StateManager.ActiveState" Value="Hover"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="wss:StateManager.ActiveState" Value="Selected"/>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="wss:StateManager.ActiveState" Value="Disabled"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" 
                                    Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=DisabledOpacity}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}},Path=TabStripPlacement}"
                                     Value="Left">
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}},Path=TabStripPlacement}"
                                     Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}},Path=TabStripPlacement}"
                                     Value="Right">
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}},Path=TabStripPlacement}"
                                     Value="Top">
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>