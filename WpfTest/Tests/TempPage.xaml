<Page x:Class="WpfTest.Tests.TempPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:WpfTest.Tests"
      xmlns:ws="https://schemas.elecho.dev/wpfsuite"
      xmlns:wsd="https://schemas.elecho.dev/wpfsuite-design/fluent"
      mc:Ignorable="d"
      d:DesignHeight="2200" d:DesignWidth="800"
      d:Background="White"
      Title="TempPage"
      d:DataContext="{d:DesignInstance Type=local:TempPage}">
    <Page.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                          Padding="0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <ws:ScrollViewer VerticalScrollBarVisibility="Auto">
        <ws:StackPanel Margin="12"
                       Spacing="8">
            <ws:Menu>
                <ws:MenuItem Header="QWQ">
                    <ws:MenuItem Header="awa">
                        <ws:MenuItem Header="qaq"/>
                        <ws:MenuItem Header="qaq"/>
                    </ws:MenuItem>
                    <ws:MenuItem Header="awa"/>
                    <ws:MenuItem Header="awa"/>
                </ws:MenuItem>
                <ws:MenuItem Header="qwq"/>
                <ws:MenuItem Header="qwq"/>
                <ws:MenuItem Header="qwq"/>
            </ws:Menu>

            <Menu>
                <MenuItem Header="qwq">
                    <MenuItem Header="awa">
                        <MenuItem Header="qaq"/>
                        <MenuItem Header="qaq"/>
                    </MenuItem>
                    <MenuItem Header="awa"/>
                    <MenuItem Header="awa"/>
                </MenuItem>
                <MenuItem Header="qwq"/>
                <MenuItem Header="qwq"/>
                <MenuItem Header="qwq"/>
            </Menu>

            <ws:Expander Header="Fuck you world"
                         HeaderIconPosition="End"
                         HeaderBackground="White"
                         HeaderBorderThickness="1"
                         HeaderBorderBrush="Gray"
                         HeaderPadding="8">
                ofiwjefio
            </ws:Expander>

            <ws:StackPanel Spacing="8"
                           Orientation="Horizontal">
                <ws:Button Content="QWQ" PressedBackground="Red"
                           Foreground="Green"
                           PressedForeground="Blue"/>
                <ws:Button>
                    <ws:StackPanel Orientation="Horizontal"
                                   Spacing="4">
                        <wsd:FluentIcon Symbol="Accept"
                                        VerticalAlignment="Center"/>
                        <TextBlock Text="Test"/>
                    </ws:StackPanel>
                </ws:Button>
                <ws:Button Content="QWQ"/>
                <ws:Button Content="QWQ" wsd:Theme.IsPrimary="True"/>
                <ws:ToggleButton Content="QWQ"/>
                <ws:ContentControl ContentDelay="0:0:1">
                    <ws:ContentControl.Transition>
                        <ws:SlideFadeTransition Orientation="Horizontal"
                                                Distance="30"/>
                    </ws:ContentControl.Transition>
                    <ToggleButton Content="Toggle test" IsChecked="True"/>
                </ws:ContentControl>

                <ws:Button Background="#eeeeee"
                           HoverBackground="#11000000"/>

                <ContentControl Padding="10">
                    <Rectangle Width="10" Height="10" Fill="Pink"/>
                </ContentControl>
            </ws:StackPanel>

            <Grid x:Name="TestPanel"
                  MaxWidth="300">
                <ws:WrapPanel Orientation="Horizontal"
                              HorizontalSpacing="4"
                              VerticalSpacing="4">
                    <ws:Button Click="Button_Click"
                               ClipToBounds="True">
                        <ws:ContentControl Name="buttonContentControl"
                                           Content="Test">
                            <ws:ContentControl.Transition>
                                <ws:SlideFadeTransition Orientation="Vertical"/>
                            </ws:ContentControl.Transition>
                        </ws:ContentControl>
                    </ws:Button>
                </ws:WrapPanel>
            </Grid>

            <ws:StackPanel Orientation="Horizontal"
                           Spacing="4">
                <TextBlock Visibility="Collapsed"/>
                <!--<TextBlock Text="121"/>-->
            </ws:StackPanel>

            <ws:TextBox Padding="6"
                        Placeholder="121"/>

            <TextBox Style="{DynamicResource TextBoxStyle1}" Padding="6"
                     />

            <ws:ComboBox IsEditable="True"
                         HoverBackground="Red">
                <ws:ComboBox.Items>
                    <ws:ComboBoxItem Content="QWQ"/>
                </ws:ComboBox.Items>
            </ws:ComboBox>


            <ComboBox IsEditable="True">
                <ComboBox.Items>
                    <ComboBoxItem Content="QWQ"/>
                </ComboBox.Items>
            </ComboBox>

            <ws:TextBox AcceptsReturn="True"
                        MaxHeight="300"
                        Placeholder="Multi line TextBox"/>

            <ws:PasswordBox Name="passwordBox"
                            Placeholder="PasswordBox"/>

            <StackPanel>
                <TextBlock Text="PasswordValue:"/>
                <TextBlock Text="{Binding ElementName=passwordBox,Path=Password}"/>
            </StackPanel>

            <ws:Button Background="Red"
                       HoverBackground="{x:Null}"
                       Content="Test"/>

            <ws:ToggleButton Content="QWQ"/>

            <ws:Button Content="QWQ"/>

            <ws:FlexPanel MainSpacing="8">
                <ws:TextBox ws:FlexPanel.Grow="1"
                            HorizontalAlignment="Stretch"/>
                <ws:Button ws:FlexPanel.Shrink="0"
                           Content="Test"/>
            </ws:FlexPanel>

            <ws:CheckBox x:Name="TextBoxCheckBox"
                         Content="Active"/>

            <CheckBox  Content="Active"/>

            <ws:TextBox Name="TestTextBox"
                        Text="What"
                        AcceptsReturn="True"
                        IsEnabled="{Binding ElementName=TextBoxCheckBox,Path=IsChecked}">
            </ws:TextBox>

            <ws:TextBox Text="What"
                        IsEnabled="False"/>

            <ws:ComboBox IsEditable="True"/>

            <TextBox Text="What"
                     IsEnabled="False"/>

            <ws:CheckBox DisabledForeground="Gray"
                         IsEnabled="False">
                <ws:TextBox Width="100"
                            Text="Test"/>
            </ws:CheckBox>

            <CheckBox IsEnabled="False">
                <TextBox Width="100"
                         Text="Test"/>
            </CheckBox>

            <ws:Border BorderThickness="20 20 40 50"
                       BorderBrush="Pink"
                       Background="Green"
                       CornerRadius="35 40 50 60"
                       Width="500"
                       Height="500">
                <Rectangle Clip="{Binding RelativeSource={RelativeSource AncestorType=ws:Border},Path=ContentClip}"
                           Fill="Red"/>
            </ws:Border>

            <ws:ProgressBar Height="40"
                            BorderThickness="5"
                            CornerRadius="10"
                            IsIndeterminate="True"/>

            <Grid Name="testBorder"
                  Width="200"
                  Height="50"
                  Background="Pink">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualStateGroup.Transitions>
                            <VisualTransition To="TestState"
                                              GeneratedDuration="0:0:0.3">
                                <VisualTransition.GeneratedEasingFunction>
                                    <CircleEase/>
                                </VisualTransition.GeneratedEasingFunction>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>

                        <VisualState x:Name="TestState">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                                 IsAdditive="True"
                                                 To="10"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>

            <ws:TabControl CornerRadius="0 3 5 5"
                           MinHeight="300">
                <ws:TabControl.Transition>
                    <ws:SlideFadeTransition Orientation="Vertical"
                                            Distance="50"/>
                </ws:TabControl.Transition>
                <ws:TabItem Header="QWQ"
                            HoverBackground="Pink"
                            CornerRadius="2 2 0 0">
                    <TextBlock Text="This is a tab item"/>
                </ws:TabItem>
                <ws:TabItem Header="QWQ"
                            HoverBackground="Pink"
                            HoverForeground="Azure"
                            HoverBorderBrush="Black"
                            SelectedBackground="Red"
                            SelectedForeground="Blue"
                            SelectedBorderBrush="Green"
                            BorderThickness="5"
                            CornerRadius="2 2 0 0">
                    <TextBlock Text="This is a tab item 2"/>
                </ws:TabItem>
            </ws:TabControl>
            <Button Width="200"
                    Height="200"
                    FocusVisualStyle="{x:Null}">
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="qwq"/>
                        <MenuItem Header="qwq"/>
                        <MenuItem Header="qwq"/>
                    </ContextMenu>
                </Button.ContextMenu>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Resources>
                            <QuadraticEase x:Key="EasingFunction"/>
                            <Storyboard x:Key="InAnimation">
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].Angle"
                                                 EasingFunction="{StaticResource EasingFunction}"
                                                 BeginTime="0"
                                                 Duration="0:0:0.500"
                                                 From="-20"
                                                 To="0"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].ScaleX"
                                                 EasingFunction="{StaticResource EasingFunction}"
                                                 BeginTime="0"
                                                 Duration="0:0:0.400"
                                                 From="3"
                                                 To="1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].ScaleY"
                                                 EasingFunction="{StaticResource EasingFunction}"
                                                 BeginTime="0"
                                                 Duration="0:0:0.400"
                                                 From="3"
                                                 To="1"/>
                            </Storyboard>
                        </Style.Resources>
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <TransformGroup>
                                    <RotateTransform/>
                                    <ScaleTransform/>
                                </TransformGroup>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard Storyboard="{StaticResource InAnimation}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Click">
                                <BeginStoryboard Storyboard="{StaticResource InAnimation}"/>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Menu>
                <Menu.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="qwq"/>
                        <MenuItem Header="qwq"/>
                    </ContextMenu>
                </Menu.ContextMenu>
                <MenuItem Header="QWQ"/>
                <MenuItem Header="AWA"/>
            </Menu>

            <ScrollBar Height="100"
                       BorderBrush="Pink"/>

            <ws:Thumb Width="20"
                      Height="20"/>

            <RepeatButton Content="QWQ"/>

            <ws:Border ClipToBounds="True"
                       CornerRadius="40 30 20 10"
                       BorderBrush="Firebrick"
                       BorderThickness="5"
                       Width="200">
                <Image Source="/Assets/TestImage2.jpg"
                       Clip="{Binding RelativeSource={RelativeSource AncestorType=ws:Border},Path=ContentClip}"/>
            </ws:Border>

            <ws:Border Width="200" Height="50"
                       BorderBrush="{DynamicResource {x:Static wsd:FluentResource.TextControlElevationBorderFocusedBrush}}"
                       BorderThickness="3">

            </ws:Border>

            <ws:Button Content="Toggle Theme"
                       Click="ToggleThemeButton_Click"/>
        </ws:StackPanel>
    </ws:ScrollViewer>
</Page>
