//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EleCho.WpfSuite.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EleCho.WpfSuite.Properties.StringResources", typeof(StringResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backdrop and accent cannot both be set..
        /// </summary>
        internal static string BackdropAndAccentCannotBothBeSet {
            get {
                return ResourceManager.GetString("BackdropAndAccentCannotBothBeSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not find template child &apos;TempDialogs&apos;.
        /// </summary>
        internal static string CanNotFindTemplateChildTempDialogs {
            get {
                return ResourceManager.GetString("CanNotFindTemplateChildTempDialogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not get HwndSource of Visual.
        /// </summary>
        internal static string CanNotGetHwndSourceOfVisual {
            get {
                return ResourceManager.GetString("CanNotGetHwndSourceOfVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Caption is already set to another Visual..
        /// </summary>
        internal static string CaptionIsAlreadySetToAnotherVisual {
            get {
                return ResourceManager.GetString("CaptionIsAlreadySetToAnotherVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close button is already set to another Visual..
        /// </summary>
        internal static string CloseButtonIsAlreadySetToAnotherVisual {
            get {
                return ResourceManager.GetString("CloseButtonIsAlreadySetToAnotherVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DialogLayer could not be found. Consider placing a DialogLayer as the ancestor node of this Dialog..
        /// </summary>
        internal static string DialogLayerCouldNotBeFoundConsiderPlacingADialogLayerAsTheAncestorNodeOfThisDialog {
            get {
                return ResourceManager.GetString("DialogLayerCouldNotBeFoundConsiderPlacingADialogLayerAsTheAncestorNodeOfThisDialo" +
                        "g", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set the Accent while using WindowChrome, you can only see the effect when the GlassFrameThickness is set to 0..
        /// </summary>
        internal static string IfYouSetTheAccentWhileUsingWindowChromeYouCanOnlySeeTheEffectWhenTheGlassFrameThicknessIsSetToZero {
            get {
                return ResourceManager.GetString("IfYouSetTheAccentWhileUsingWindowChromeYouCanOnlySeeTheEffectWhenTheGlassFrameThi" +
                        "cknessIsSetToZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set the Backdrop in the case of using WindowChrome, you will only see the effect when GlassFrameThickness is a non-zero value. Generally, it should be set to negative one..
        /// </summary>
        internal static string IfYouSetTheBackdropInTheCaseOfUsingWindowChromeYouWillOnlySeeTheEffectWhenGlassFrameThicknessIsANonZeroValueGenerallyItShouldBeSetToNegativeOne {
            get {
                return ResourceManager.GetString("IfYouSetTheBackdropInTheCaseOfUsingWindowChromeYouWillOnlySeeTheEffectWhenGlassFr" +
                        "ameThicknessIsANonZeroValueGenerallyItShouldBeSetToNegativeOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum button is already set to another Visual..
        /// </summary>
        internal static string MaximumButtonIsAlreadySetToAnotherVisual {
            get {
                return ResourceManager.GetString("MaximumButtonIsAlreadySetToAnotherVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum button is already set to another Visual..
        /// </summary>
        internal static string MinimumButtonIsAlreadySetToAnotherVisual {
            get {
                return ResourceManager.GetString("MinimumButtonIsAlreadySetToAnotherVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This exception is only thrown when the program is running in Debug mode..
        /// </summary>
        internal static string ThisExceptionIsOnlyThrownWhenTheProgramIsRunningInDebugMode {
            get {
                return ResourceManager.GetString("ThisExceptionIsOnlyThrownWhenTheProgramIsRunningInDebugMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Visual is already a window caption.
        /// </summary>
        internal static string ThisVisualIsAlreadyAWindowCaption {
            get {
                return ResourceManager.GetString("ThisVisualIsAlreadyAWindowCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Visual is already a window close button.
        /// </summary>
        internal static string ThisVisualIsAlreadyAWindowCloseButton {
            get {
                return ResourceManager.GetString("ThisVisualIsAlreadyAWindowCloseButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Visual is already a window maximum button.
        /// </summary>
        internal static string ThisVisualIsAlreadyAWindowMaximumButton {
            get {
                return ResourceManager.GetString("ThisVisualIsAlreadyAWindowMaximumButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Visual is already a window minimum button.
        /// </summary>
        internal static string ThisVisualIsAlreadyAWindowMinimumButton {
            get {
                return ResourceManager.GetString("ThisVisualIsAlreadyAWindowMinimumButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only see the effect of the Backdrop setting when the Background is set to a transparent brush..
        /// </summary>
        internal static string YouCanOnlySeeTheEffectOfTheBackdropSettingWhenTheBackgroundIsSetToATransparentBrush {
            get {
                return ResourceManager.GetString("YouCanOnlySeeTheEffectOfTheBackdropSettingWhenTheBackgroundIsSetToATransparentBru" +
                        "sh", resourceCulture);
            }
        }
    }
}
