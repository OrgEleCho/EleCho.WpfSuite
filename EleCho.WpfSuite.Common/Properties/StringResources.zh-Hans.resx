<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="YouCanOnlySeeTheEffectOfTheBackdropSettingWhenTheBackgroundIsSetToATransparentBrush" xml:space="preserve">
    <value>只有在 Background 为透明笔刷时, 你才能看到 Backdrop 的设置效果</value>
  </data>
  <data name="IfYouSetTheBackdropInTheCaseOfUsingWindowChromeYouWillOnlySeeTheEffectWhenGlassFrameThicknessIsANonZeroValueGenerallyItShouldBeSetToNegativeOne" xml:space="preserve">
    <value>如果你在使用 WindowChrome 的情况下设定 Backdrop, 那么只有在 GlassFrameThickness 为非 0 值时你才能看到效果. 一般它应该被设置为 -1</value>
  </data>
  <data name="ThisExceptionIsOnlyThrownWhenTheProgramIsRunningInDebugMode" xml:space="preserve">
    <value>此异常仅在程序于 Debug 模式下运行时抛出</value>
  </data>
  <data name="IfYouSetTheAccentWhileUsingWindowChromeYouCanOnlySeeTheEffectWhenTheGlassFrameThicknessIsSetToZero" xml:space="preserve">
    <value>如果你在使用 WindowChrome 的情况下设定 Accent, 那么只有在 GlassFrameThickness 为 0 时你才能看到效果.</value>
  </data>
  <data name="MaximumButtonIsAlreadySetToAnotherVisual" xml:space="preserve">
    <value>最大化按钮已经被设置为其他 Visual 了</value>
  </data>
  <data name="MinimumButtonIsAlreadySetToAnotherVisual" xml:space="preserve">
    <value>最小化按钮已经被设置为其他 Visual 了</value>
  </data>
  <data name="CloseButtonIsAlreadySetToAnotherVisual" xml:space="preserve">
    <value>关闭按钮已经被设置为其他 Visual 了</value>
  </data>
  <data name="BackdropAndAccentCannotBothBeSet" xml:space="preserve">
    <value>Backdrop 和 Accent 不能都被设置</value>
  </data>
  <data name="DialogLayerCouldNotBeFoundConsiderPlacingADialogLayerAsTheAncestorNodeOfThisDialog" xml:space="preserve">
    <value>找不到 DialogLayer. 请考虑放置 DialogLayer 作为此 Dialog 的上级节点</value>
  </data>
  <data name="CanNotFindTemplateChildTempDialogs" xml:space="preserve">
    <value>无法找到模板子级 'TempDialogs'</value>
  </data>
  <data name="CanNotGetHwndSourceOfVisual" xml:space="preserve">
    <value>无法获取 Visual 的 HwndSource</value>
  </data>
  <data name="ThisVisualIsAlreadyAWindowCloseButton" xml:space="preserve">
    <value>此 Visual 已经是窗口的关闭按钮了</value>
  </data>
  <data name="ThisVisualIsAlreadyAWindowMaximumButton" xml:space="preserve">
    <value>此 Visual 已经是窗口的最大化按钮了</value>
  </data>
  <data name="ThisVisualIsAlreadyAWindowMinimumButton" xml:space="preserve">
    <value>此 Visual 已经是窗口的最小化按钮了</value>
  </data>
</root>