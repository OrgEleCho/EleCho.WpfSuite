<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:wsd="clr-namespace:EleCho.WpfSuite.FluentDesign"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/EleCho.WpfSuite.FluentDesign;component/Styles/TextBoxResources.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/EleCho.WpfSuite.FluentDesign;component/Styles/PasswordBoxResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ws:Button}"
           BasedOn="{StaticResource {x:Type ws:Button}}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="8 6"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlElevationBorderBrush}}"/>
        <Setter Property="HoverBorderBrush" Value="{x:Null}"/>
        <Setter Property="PressedBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlStrokeColorDefaultBrush}}"/>
        <Setter Property="DisabledBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlStrokeColorDefaultBrush}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorDefaultBrush}}"/>
        <Setter Property="HoverBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorSecondaryBrush}}"/>
        <Setter Property="PressedBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorTertiaryBrush}}"/>
        <Setter Property="DisabledBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorDisabledBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>

        <Style.Triggers>
            <Trigger Property="wsd:Theme.IsPrimary" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="HoverBorderBrush" Value="{x:Null}"/>
                <Setter Property="PressedBorderBrush" Value="{x:Null}"/>
                <Setter Property="DisabledBorderBrush" Value="{x:Null}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static wsd:FluentResource.AccentFillColorDefaultBrush}}"/>
                <Setter Property="HoverBackground" Value="{DynamicResource {x:Static wsd:FluentResource.AccentFillColorSecondaryBrush}}"/>
                <Setter Property="PressedBackground" Value="{DynamicResource {x:Static wsd:FluentResource.AccentFillColorTertiaryBrush}}"/>
                <Setter Property="DisabledBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorDisabledBrush}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextOnAccentFillColorPrimaryBrush}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ws:ToggleButton}"
           BasedOn="{StaticResource {x:Type ws:ToggleButton}}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="8 6"/>
        <Setter Property="CheckedForeground" Value="{DynamicResource {x:Static wsd:FluentResource.TextOnAccentFillColorPrimaryBrush}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlElevationBorderBrush}}"/>
        <Setter Property="HoverBorderBrush" Value="{x:Null}"/>
        <Setter Property="PressedBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlStrokeColorDefaultBrush}}"/>
        <Setter Property="CheckedBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.AccentFillColorDefaultBrush}}"/>
        <Setter Property="DisabledBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlStrokeColorDefaultBrush}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorDefaultBrush}}"/>
        <Setter Property="HoverBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorSecondaryBrush}}"/>
        <Setter Property="PressedBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorTertiaryBrush}}"/>
        <Setter Property="CheckedBackground" Value="{DynamicResource {x:Static wsd:FluentResource.AccentFillColorDefaultBrush}}"/>
        <Setter Property="DisabledBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorDisabledBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:ComboBox}"
           BasedOn="{StaticResource {x:Type ws:ComboBox}}">
        <Setter Property="Padding" Value="8 6"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="PopupCornerRadius" Value="4"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlElevationBorderBrush}}"/>
        <Setter Property="HoverBorderBrush" Value="{x:Null}"/>
        <Setter Property="PressedBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlStrokeColorDefaultBrush}}"/>
        <Setter Property="DisabledBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlStrokeColorDefaultBrush}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorDefaultBrush}}"/>
        <Setter Property="HoverBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorSecondaryBrush}}"/>
        <Setter Property="PressedBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorTertiaryBrush}}"/>
        <Setter Property="DisabledBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorDisabledBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
        
        <!--Popup-->
        <Setter Property="PopupBackground" Value="{DynamicResource {x:Static wsd:FluentResource.CardStrokeColorDefaultSolidBrush}}"/>
        <Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlStrokeColorDefaultBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:ComboBoxItem}"
           BasedOn="{StaticResource {x:Type ws:ComboBoxItem}}">
        <Setter Property="Margin" Value="2 1"/>
        <Setter Property="Padding" Value="8 6"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="BorderThickness" Value="2 0 0 0"/>
        <Setter Property="HoverBackground" Value="#11000000"/>
        <Setter Property="HoverBorderBrush" Value="#11000000"/>

        <Setter Property="SelectedBackground" Value="#11000000"/>
        <Setter Property="SelectedBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.AccentFillColorDefaultBrush}}"/>

        <Setter Property="HoverFocusedBackground" Value="#11000000"/>
        <Setter Property="HoverFocusedBorderBrush" Value="#11000000"/>
        
        <Setter Property="SelectedFocusedBackground" Value="#11000000"/>
        <Setter Property="SelectedFocusedBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.AccentFillColorDefaultBrush}}"/>
        
        <Setter Property="HoverSelectedBackground" Value="#11000000"/>
        <Setter Property="HoverSelectedBorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.AccentFillColorDefaultBrush}}"/>
        <Setter Property="FocusedBorderBrush" Value="Transparent"/>

        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:CheckBox}"
           BasedOn="{StaticResource {x:Type ws:CheckBox}}">
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:ListBox}"
           BasedOn="{StaticResource {x:Type ws:ListBox}}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static wsd:FluentResource.CardBackgroundFillColorDefaultBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:ListBoxItem}"
           BasedOn="{StaticResource {x:Type ws:ListBoxItem}}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="HoverBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorDefaultBrush}}"/>
        <Setter Property="SelectedBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorSecondaryBrush}}"/>
        <Setter Property="SelectedActiveBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorTertiaryBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:ListView}"
           BasedOn="{StaticResource {x:Type ws:ListView}}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static wsd:FluentResource.CardBackgroundFillColorDefaultBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:ListViewItem}"
           BasedOn="{StaticResource {x:Type ws:ListViewItem}}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="HoverBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorDefaultBrush}}"/>
        <Setter Property="SelectedBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorSecondaryBrush}}"/>
        <Setter Property="SelectedActiveBackground" Value="{DynamicResource {x:Static wsd:FluentResource.ControlFillColorTertiaryBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:TabControl}"
           BasedOn="{StaticResource {x:Type ws:TabControl}}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:TabItem}"
           BasedOn="{StaticResource {x:Type ws:TabItem}}">
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:ContextMenu}"
           BasedOn="{StaticResource {x:Type ws:ContextMenu}}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:Menu}"
           BasedOn="{StaticResource {x:Type ws:Menu}}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:MenuItem}"
           BasedOn="{StaticResource {x:Type ws:MenuItem}}">
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="PopupCornerRadius" Value="4"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:GroupBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wsd:FluentResource.DividerStrokeColorDefaultBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
    </Style>

    <Style TargetType="{x:Type ws:ScrollBar}"
           BasedOn="{StaticResource {x:Type ws:ScrollBar}}">
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="ThumbCornerRadius" Value="3"/>
        <Setter Property="ButtonCornerRadius" Value="3"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="GlyphBrush" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
        <Setter Property="HoverGlyphBrush" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorSecondaryBrush}}"/>
        <Setter Property="PressedGlyphBrush" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorTertiaryBrush}}"/>
        <Setter Property="DisabledGlyphBrush" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorDisabledBrush}}"/>

        <Setter Property="Background" Value="{DynamicResource {x:Static wsd:FluentResource.LayerFillColorAltBrush}}"/>
        <Setter Property="HoverBackground" Value="{x:Null}"/>
        <Setter Property="PressedBackground" Value="{x:Null}"/>
        <Setter Property="DisabledBackground" Value="{x:Null}"/>

        <Setter Property="Foreground" Value="{DynamicResource {x:Static wsd:FluentResource.TextFillColorPrimaryBrush}}"/>
        
        <Setter Property="ThumbBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlStrongStrokeColorDefaultBrush}}"/>
        <Setter Property="HoverThumbBrush" Value="{x:Null}"/>
        <Setter Property="DraggingThumbBrush" Value="{x:Null}"/>
        <Setter Property="DisabledThumbBrush" Value="{DynamicResource {x:Static wsd:FluentResource.ControlStrongStrokeColorDisabledBrush}}"/>

        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="12"/>
                <Setter Property="MinWidth" Value="12"/>
                <Setter Property="GlyphMargin" Value="1 2"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="12"/>
                <Setter Property="MinHeight" Value="12"/>
                <Setter Property="GlyphMargin" Value="1 2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ws:Tooltip}"
           BasedOn="{StaticResource {x:Type ws:Tooltip}}">
        <!--nothing-->
    </Style>

</ResourceDictionary>